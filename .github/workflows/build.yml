name: Package and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  createrelease:
    name: Create Release
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -c -n simple_web_server_windows simple_web_server.py
            OUT_FILE_NAME: simple_web_server_windows.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F -c -n simple_web_server_linux simple_web_server.py
            OUT_FILE_NAME: simple_web_server_linux
            ASSET_MIME: application/x-executable
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller --add-data 'config/*:config' --add-data 'scripts/*:scripts' -F -c -n toolbox_windows toolbox.py
            OUT_FILE_NAME: toolbox_windows.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller --add-data 'config/*:config' --add-data 'scripts/*:scripts' -F -c -n toolbox_linux toolbox.py
            OUT_FILE_NAME: toolbox_linux
            ASSET_MIME: application/x-executable

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Package using PyInstaller
        run: ${{matrix.CMD_BUILD}}
        shell: bash

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
